#!/usr/bin/env bash

TOP=..
LD=$(command -v ld)
CC=$(command -v gcc)

# What are we building?

TGT=$1
case $TGT in
  "galua")
     NEWSTATE="lua_newstate_nondbg"
     WRITESTRING="galua_writestring_nondbg"
  ;;
  "galua-dbg")
     NEWSTATE="lua_newstate_dbg"
     WRITESTRING="galua_writestring_dbg"
  ;;
  *)
     echo "Usage: $(basename $0) (galua | galua-dbg)"
     exit 1
  ;;
esac


# Make the entry point for "newstate".
$CC -fPIC -DNEWSTATE=${NEWSTATE} -DWRITESTRING=${WRITESTRING} -c newstate.c


# Build library

LIBNAME=lib${TGT}.a

DIST_DIR=$(stack path --dist-dir)

# Figure out which libraries we need to package together.
HS_LIBRARIES_LIST_FILE=$TOP/$TGT/$DIST_DIR/build/autogen/HS_LIBRARIES_LIST
HS_LIBRARY_PATHS_LIST_FILE=$TOP/$TGT/$DIST_DIR/build/autogen/HS_LIBRARY_PATHS_LIST
EXTRA_LIBRARIES_LIST_FILE=$TOP/$TGT/$DIST_DIR/build/autogen/EXTRA_LIBRARIES_LIST

if [ ! -e "$HS_LIBRARIES_LIST_FILE" ]; then
  echo "Failed to find the file \`HS_LIBRARIES_LIST\` for \`$TGT\`."
  echo "*** It is generated by \`Setup.hs\` after configuration."
  echo "*** Perhaps \`$TGT\` was not built?"
  exit 2
fi

HS_LIBRARIES_LIST=$(cat $HS_LIBRARIES_LIST_FILE)
HS_LIBRARY_PATHS_LIST=$(cat $HS_LIBRARY_PATHS_LIST_FILE)
EXTRA_LIBRARIES_LIST=$(cat $EXTRA_LIBRARIES_LIST_FILE)

declare -a HS_LD_FLAGS
declare -a C_LD_FLAGS

IFS=$'\n'; for lib in $HS_LIBRARY_PATHS_LIST
do
        HS_LD_FLAGS+=("-L$lib")
done

IFS=$'\n'; for lib in $HS_LIBRARIES_LIST
do
        HS_LD_FLAGS+=("-l$lib")
done

IFS=$'\n'; for lib in $EXTRA_LIBRARIES_LIST
do
        C_LD_FLAGS+=("-l$lib")
done


# What OS are we running on?
UNAME=$(uname -s)
ARCH=$(uname -m)

case $UNAME in
  "Linux" | "FreeBSD" )
      TMP_DIR=$(mktemp -d .build.XXXX)

      cut --complement -b 1 lua_api.txt | sort > $TMP_DIR/API

      sed 's/^/--require-defined=/' <$TMP_DIR/API >$TMP_DIR/REQ

      echo "{"                   >  $TMP_DIR/DYN
      sed 's/$/;/' <$TMP_DIR/API >> $TMP_DIR/DYN
      echo "};"                  >> $TMP_DIR/DYN


      # XXX: Using --gc-sections causes a crash, for some reason?
      # $LD -o $LIBNAME -arch $ARCH --relocatable --whole-archive \
      #     @$TMP_DIR/REQ --gc-sections \
      #  newstate.o liblualibs.a "${HS_LD_FLAGS[@]}"

      $LD -o $LIBNAME -arch $ARCH --relocatable --whole-archive \
       --retain-symbols-file=$TMP_DIR/API \
       newstate.o liblualibs.a "${HS_LD_FLAGS[@]}"



      nm -f posix $LIBNAME | awk '{print $1}' | sort > $TMP_DIR/ALL
      comm -23 $TMP_DIR/ALL $TMP_DIR/API > $TMP_DIR/LOCALIZE
      objcopy --localize-symbols=$TMP_DIR/LOCALIZE $LIBNAME


      C_LD_FLAGS+=("-lpthread")

      # Build executable
      $CC main.c -g -o $TGT -I$TOP/galua-c/inplace/include/galua -std=gnu99 \
              -Wl,--dynamic-list=$TMP_DIR/DYN \
              -L. -l$TGT "${C_LD_FLAGS[@]}"
      rm -rf $TMP_DIR
  ;;
  "Darwin")
    $LD -r -o $LIBNAME \
       -arch x86_64 \
       -exported_symbols_list lua_api.txt \
       newstate.o \
       liblualibs.a \
       "${HS_LD_FLAGS[@]}"

    # Build executable
    $CC main.c -g \
            -o $TGT \
            -std=gnu99 \
            -Wl,-no_compact_unwind \
            -I$TOP/galua-c/inplace/include/galua \
            -L. -l$TGT \
            "${C_LD_FLAGS[@]}"

  ;;
  *) echo "Unknown OS: $UNAME"
     exit 3
esac



